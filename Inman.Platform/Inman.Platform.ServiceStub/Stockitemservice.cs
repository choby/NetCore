// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: stockitemservice.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Inman.Platform.ServiceStub {

  /// <summary>Holder for reflection information generated from stockitemservice.proto</summary>
  public static partial class StockitemserviceReflection {

    #region Descriptor
    /// <summary>File descriptor for stockitemservice.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StockitemserviceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZzdG9ja2l0ZW1zZXJ2aWNlLnByb3RvGgpkYXRhLnByb3RvIjkKEFN0b2Nr",
            "SXRlbVJlcXVlc3QSEAoIUXVhbnRpdHkYASABKAUSEwoLU3RvY2tJdGVtSWQY",
            "AiADKAUiQgoRU3RvY2tJdGVtUmVzcG9uc2USDQoFVG90YWwYASABKAUSHgoK",
            "U3RvY2tJdGVtcxgCIAMoCzIKLlN0b2NrSXRlbTKAAQoQU3RvY2tJdGVtU2Vy",
            "dmljZRIvCgxHZXRTdG9ja0l0ZW0SES5TdG9ja0l0ZW1SZXF1ZXN0GgouU3Rv",
            "Y2tJdGVtIgASOwoQR2V0U3RvY2tJdGVtTGlzdBIRLlN0b2NrSXRlbVJlcXVl",
            "c3QaEi5TdG9ja0l0ZW1SZXNwb25zZSIAQh2qAhpJbm1hbi5QbGF0Zm9ybS5T",
            "ZXJ2aWNlU3R1YmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Inman.Platform.ServiceStub.Data.DataReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Inman.Platform.ServiceStub.StockItemRequest), global::Inman.Platform.ServiceStub.StockItemRequest.Parser, new[]{ "Quantity", "StockItemId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Inman.Platform.ServiceStub.StockItemResponse), global::Inman.Platform.ServiceStub.StockItemResponse.Parser, new[]{ "Total", "StockItems" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class StockItemRequest : pb::IMessage<StockItemRequest> {
    private static readonly pb::MessageParser<StockItemRequest> _parser = new pb::MessageParser<StockItemRequest>(() => new StockItemRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StockItemRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Inman.Platform.ServiceStub.StockitemserviceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StockItemRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StockItemRequest(StockItemRequest other) : this() {
      quantity_ = other.quantity_;
      stockItemId_ = other.stockItemId_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StockItemRequest Clone() {
      return new StockItemRequest(this);
    }

    /// <summary>Field number for the "Quantity" field.</summary>
    public const int QuantityFieldNumber = 1;
    private int quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "StockItemId" field.</summary>
    public const int StockItemIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_stockItemId_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> stockItemId_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> StockItemId {
      get { return stockItemId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StockItemRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StockItemRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Quantity != other.Quantity) return false;
      if(!stockItemId_.Equals(other.stockItemId_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      hash ^= stockItemId_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Quantity != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Quantity);
      }
      stockItemId_.WriteTo(output, _repeated_stockItemId_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quantity);
      }
      size += stockItemId_.CalculateSize(_repeated_stockItemId_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StockItemRequest other) {
      if (other == null) {
        return;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
      stockItemId_.Add(other.stockItemId_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Quantity = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            stockItemId_.AddEntriesFrom(input, _repeated_stockItemId_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StockItemResponse : pb::IMessage<StockItemResponse> {
    private static readonly pb::MessageParser<StockItemResponse> _parser = new pb::MessageParser<StockItemResponse>(() => new StockItemResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StockItemResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Inman.Platform.ServiceStub.StockitemserviceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StockItemResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StockItemResponse(StockItemResponse other) : this() {
      total_ = other.total_;
      stockItems_ = other.stockItems_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StockItemResponse Clone() {
      return new StockItemResponse(this);
    }

    /// <summary>Field number for the "Total" field.</summary>
    public const int TotalFieldNumber = 1;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "StockItems" field.</summary>
    public const int StockItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Inman.Platform.ServiceStub.Data.StockItem> _repeated_stockItems_codec
        = pb::FieldCodec.ForMessage(18, global::Inman.Platform.ServiceStub.Data.StockItem.Parser);
    private readonly pbc::RepeatedField<global::Inman.Platform.ServiceStub.Data.StockItem> stockItems_ = new pbc::RepeatedField<global::Inman.Platform.ServiceStub.Data.StockItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Inman.Platform.ServiceStub.Data.StockItem> StockItems {
      get { return stockItems_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StockItemResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StockItemResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Total != other.Total) return false;
      if(!stockItems_.Equals(other.stockItems_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Total != 0) hash ^= Total.GetHashCode();
      hash ^= stockItems_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Total != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Total);
      }
      stockItems_.WriteTo(output, _repeated_stockItems_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      size += stockItems_.CalculateSize(_repeated_stockItems_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StockItemResponse other) {
      if (other == null) {
        return;
      }
      if (other.Total != 0) {
        Total = other.Total;
      }
      stockItems_.Add(other.stockItems_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Total = input.ReadInt32();
            break;
          }
          case 18: {
            stockItems_.AddEntriesFrom(input, _repeated_stockItems_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
