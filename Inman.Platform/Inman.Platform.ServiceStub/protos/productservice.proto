// Copyright 2015, Google Inc.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

syntax = "proto3";
import "data.proto";
// for java 
//option java_multiple_files = true;
//option java_package = "Inman.Platform.ServiceStub";
//option java_outer_classname = "UserService";
//option objc_class_prefix = "HLW";

//package Inman.Platform.ServiceStub;

//for csharp
option csharp_namespace = "Inman.Platform.ServiceStub";

// The greeting service definition.
service ProductService {
  // Sends a greeting
  rpc GetProduct (ProductRequest) returns (Product) {}
  rpc GetProductList(ProductRequest) returns (ProductResponse){}
  rpc UpdateProduct(ProductUpdate) returns (UpdateResult){}
  rpc AddProduct(ProductUpdate) returns(UpdateResult){}
  rpc DeleteProduct(ProductDelete) returns(DeleteResult){}
}
message ProductRequest
{
	int32 Page = 1;
	int32 PageSize = 2;
	repeated int32 ProductId = 3;
	DemandDescriptor DemandDescriptor = 4;
}
message ProductResponse
{
	int32 Total = 1;
	repeated Product Products = 2;
	string ExecuteTime = 3;
}
message ProductUpdate
{
	Product Product = 1;
}

message UpdateResult
{
	bool Success = 1;
	string Message = 2;
}
message ProductDelete
{
	repeated int32 Id = 1;
}
message DeleteResult
{
	bool Success = 1;
	string Message = 2;
}
