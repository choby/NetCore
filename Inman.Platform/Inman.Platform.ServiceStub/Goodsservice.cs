// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: goodsservice.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Inman.Platform.ServiceStub {

  /// <summary>Holder for reflection information generated from goodsservice.proto</summary>
  public static partial class GoodsserviceReflection {

    #region Descriptor
    /// <summary>File descriptor for goodsservice.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GoodsserviceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJnb29kc3NlcnZpY2UucHJvdG8aCmRhdGEucHJvdG8iMQoMR29vZHNSZXF1",
            "ZXN0EhAKCFF1YW50aXR5GAEgASgFEg8KB0dvb2RzSWQYAiADKAUiNwoNR29v",
            "ZHNSZXNwb25zZRINCgVUb3RhbBgBIAEoBRIXCgdHb29kc2VzGAIgAygLMgYu",
            "R29vZHMyZAoMR29vZHNTZXJ2aWNlEiMKCEdldEdvb2RzEg0uR29vZHNSZXF1",
            "ZXN0GgYuR29vZHMiABIvCgxHZXRHb29kc0xpc3QSDS5Hb29kc1JlcXVlc3Qa",
            "Di5Hb29kc1Jlc3BvbnNlIgBCHaoCGklubWFuLlBsYXRmb3JtLlNlcnZpY2VT",
            "dHViYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Inman.Platform.ServiceStub.Data.DataReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Inman.Platform.ServiceStub.GoodsRequest), global::Inman.Platform.ServiceStub.GoodsRequest.Parser, new[]{ "Quantity", "GoodsId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Inman.Platform.ServiceStub.GoodsResponse), global::Inman.Platform.ServiceStub.GoodsResponse.Parser, new[]{ "Total", "Goodses" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GoodsRequest : pb::IMessage<GoodsRequest> {
    private static readonly pb::MessageParser<GoodsRequest> _parser = new pb::MessageParser<GoodsRequest>(() => new GoodsRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GoodsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Inman.Platform.ServiceStub.GoodsserviceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GoodsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GoodsRequest(GoodsRequest other) : this() {
      quantity_ = other.quantity_;
      goodsId_ = other.goodsId_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GoodsRequest Clone() {
      return new GoodsRequest(this);
    }

    /// <summary>Field number for the "Quantity" field.</summary>
    public const int QuantityFieldNumber = 1;
    private int quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "GoodsId" field.</summary>
    public const int GoodsIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_goodsId_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> goodsId_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> GoodsId {
      get { return goodsId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GoodsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GoodsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Quantity != other.Quantity) return false;
      if(!goodsId_.Equals(other.goodsId_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      hash ^= goodsId_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Quantity != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Quantity);
      }
      goodsId_.WriteTo(output, _repeated_goodsId_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quantity);
      }
      size += goodsId_.CalculateSize(_repeated_goodsId_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GoodsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
      goodsId_.Add(other.goodsId_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Quantity = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            goodsId_.AddEntriesFrom(input, _repeated_goodsId_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GoodsResponse : pb::IMessage<GoodsResponse> {
    private static readonly pb::MessageParser<GoodsResponse> _parser = new pb::MessageParser<GoodsResponse>(() => new GoodsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GoodsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Inman.Platform.ServiceStub.GoodsserviceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GoodsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GoodsResponse(GoodsResponse other) : this() {
      total_ = other.total_;
      goodses_ = other.goodses_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GoodsResponse Clone() {
      return new GoodsResponse(this);
    }

    /// <summary>Field number for the "Total" field.</summary>
    public const int TotalFieldNumber = 1;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "Goodses" field.</summary>
    public const int GoodsesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Inman.Platform.ServiceStub.Data.Goods> _repeated_goodses_codec
        = pb::FieldCodec.ForMessage(18, global::Inman.Platform.ServiceStub.Data.Goods.Parser);
    private readonly pbc::RepeatedField<global::Inman.Platform.ServiceStub.Data.Goods> goodses_ = new pbc::RepeatedField<global::Inman.Platform.ServiceStub.Data.Goods>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Inman.Platform.ServiceStub.Data.Goods> Goodses {
      get { return goodses_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GoodsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GoodsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Total != other.Total) return false;
      if(!goodses_.Equals(other.goodses_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Total != 0) hash ^= Total.GetHashCode();
      hash ^= goodses_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Total != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Total);
      }
      goodses_.WriteTo(output, _repeated_goodses_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      size += goodses_.CalculateSize(_repeated_goodses_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GoodsResponse other) {
      if (other == null) {
        return;
      }
      if (other.Total != 0) {
        Total = other.Total;
      }
      goodses_.Add(other.goodses_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Total = input.ReadInt32();
            break;
          }
          case 18: {
            goodses_.AddEntriesFrom(input, _repeated_goodses_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
