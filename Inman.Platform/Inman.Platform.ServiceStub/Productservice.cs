// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: productservice.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Inman.Platform.ServiceStub {

  /// <summary>Holder for reflection information generated from productservice.proto</summary>
  public static partial class ProductserviceReflection {

    #region Descriptor
    /// <summary>File descriptor for productservice.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProductserviceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRwcm9kdWN0c2VydmljZS5wcm90bxoKZGF0YS5wcm90byI1Cg5Qcm9kdWN0",
            "UmVxdWVzdBIQCghRdWFudGl0eRgBIAEoBRIRCglQcm9kdWN0SWQYAiADKAUi",
            "PAoPUHJvZHVjdFJlc3BvbnNlEg0KBVRvdGFsGAEgASgFEhoKCFByb2R1Y3Rz",
            "GAIgAygLMgguUHJvZHVjdDJyCg5Qcm9kdWN0U2VydmljZRIpCgpHZXRQcm9k",
            "dWN0Eg8uUHJvZHVjdFJlcXVlc3QaCC5Qcm9kdWN0IgASNQoOR2V0UHJvZHVj",
            "dExpc3QSDy5Qcm9kdWN0UmVxdWVzdBoQLlByb2R1Y3RSZXNwb25zZSIAQh2q",
            "AhpJbm1hbi5QbGF0Zm9ybS5TZXJ2aWNlU3R1YmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Inman.Platform.ServiceStub.Data.DataReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Inman.Platform.ServiceStub.ProductRequest), global::Inman.Platform.ServiceStub.ProductRequest.Parser, new[]{ "Quantity", "ProductId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Inman.Platform.ServiceStub.ProductResponse), global::Inman.Platform.ServiceStub.ProductResponse.Parser, new[]{ "Total", "Products" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ProductRequest : pb::IMessage<ProductRequest> {
    private static readonly pb::MessageParser<ProductRequest> _parser = new pb::MessageParser<ProductRequest>(() => new ProductRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProductRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Inman.Platform.ServiceStub.ProductserviceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductRequest(ProductRequest other) : this() {
      quantity_ = other.quantity_;
      productId_ = other.productId_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductRequest Clone() {
      return new ProductRequest(this);
    }

    /// <summary>Field number for the "Quantity" field.</summary>
    public const int QuantityFieldNumber = 1;
    private int quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "ProductId" field.</summary>
    public const int ProductIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_productId_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> productId_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ProductId {
      get { return productId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProductRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProductRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Quantity != other.Quantity) return false;
      if(!productId_.Equals(other.productId_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      hash ^= productId_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Quantity != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Quantity);
      }
      productId_.WriteTo(output, _repeated_productId_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quantity);
      }
      size += productId_.CalculateSize(_repeated_productId_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProductRequest other) {
      if (other == null) {
        return;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
      productId_.Add(other.productId_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Quantity = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            productId_.AddEntriesFrom(input, _repeated_productId_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProductResponse : pb::IMessage<ProductResponse> {
    private static readonly pb::MessageParser<ProductResponse> _parser = new pb::MessageParser<ProductResponse>(() => new ProductResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProductResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Inman.Platform.ServiceStub.ProductserviceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductResponse(ProductResponse other) : this() {
      total_ = other.total_;
      products_ = other.products_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductResponse Clone() {
      return new ProductResponse(this);
    }

    /// <summary>Field number for the "Total" field.</summary>
    public const int TotalFieldNumber = 1;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "Products" field.</summary>
    public const int ProductsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Inman.Platform.ServiceStub.Data.Product> _repeated_products_codec
        = pb::FieldCodec.ForMessage(18, global::Inman.Platform.ServiceStub.Data.Product.Parser);
    private readonly pbc::RepeatedField<global::Inman.Platform.ServiceStub.Data.Product> products_ = new pbc::RepeatedField<global::Inman.Platform.ServiceStub.Data.Product>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Inman.Platform.ServiceStub.Data.Product> Products {
      get { return products_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProductResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProductResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Total != other.Total) return false;
      if(!products_.Equals(other.products_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Total != 0) hash ^= Total.GetHashCode();
      hash ^= products_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Total != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Total);
      }
      products_.WriteTo(output, _repeated_products_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      size += products_.CalculateSize(_repeated_products_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProductResponse other) {
      if (other == null) {
        return;
      }
      if (other.Total != 0) {
        Total = other.Total;
      }
      products_.Add(other.products_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Total = input.ReadInt32();
            break;
          }
          case 18: {
            products_.AddEntriesFrom(input, _repeated_products_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
